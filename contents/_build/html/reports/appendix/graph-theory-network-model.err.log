Traceback (most recent call last):
  File "C:\Users\yamtak\AppData\Local\Programs\Python\Python310\lib\site-packages\jupyter_cache\executors\utils.py", line 58, in single_nb_execution
    executenb(
  File "C:\Users\yamtak\AppData\Local\Programs\Python\Python310\lib\site-packages\nbclient\client.py", line 1265, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "C:\Users\yamtak\AppData\Local\Programs\Python\Python310\lib\site-packages\jupyter_core\utils\__init__.py", line 160, in wrapped
    return loop.run_until_complete(inner)
  File "C:\Users\yamtak\AppData\Local\Programs\Python\Python310\lib\asyncio\base_events.py", line 649, in run_until_complete
    return future.result()
  File "C:\Users\yamtak\AppData\Local\Programs\Python\Python310\lib\site-packages\nbclient\client.py", line 703, in async_execute
    await self.async_execute_cell(
  File "C:\Users\yamtak\AppData\Local\Programs\Python\Python310\lib\site-packages\nbclient\client.py", line 1021, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "C:\Users\yamtak\AppData\Local\Programs\Python\Python310\lib\site-packages\nbclient\client.py", line 915, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
using PyCall, PyPlot, Random, ProgressMeter
nx = pyimport("networkx")
------------------

PyError (PyImport_ImportModule

The Python package networkx could not be imported by pyimport. Usually this means
that you did not install networkx in the Python version being used by PyCall.

PyCall is currently configured to use the Python version at:

C:\Users\yamtak\AppData\Local\Programs\Python\Python310\python.exe

and you should use whatever mechanism you usually use (apt-get, pip, conda,
etcetera) to install the Python package containing the networkx module.

One alternative is to re-configure PyCall to use a different Python
version on your system: set ENV["PYTHON"] to the path/name of the python
executable you want to use, run Pkg.build("PyCall"), and re-launch Julia.

Another alternative is to configure PyCall to use a Julia-specific Python
distribution via the Conda.jl package (which installs a private Anaconda
Python distribution), which has the advantage that packages can be installed
and kept up-to-date via Julia.  As explained in the PyCall documentation,
set ENV["PYTHON"]="", run Pkg.build("PyCall"), and re-launch Julia. Then,
To install the networkx module, you can use `pyimport_conda("networkx", PKG)`,
where PKG is the Anaconda package that contains the module networkx,
or alternatively you can use the Conda package directly (via
`using Conda` followed by `Conda.add` etcetera).

) <class 'ModuleNotFoundError'>
ModuleNotFoundError("No module named 'networkx'")


Stacktrace:
 [1] pyimport(name::String)
   @ PyCall C:\Users\yamtak\.julia\packages\PyCall\7a7w0\src\PyCall.jl:550
 [2] top-level scope
   @ In[1]:2
 [3] eval
   @ .\boot.jl:368 [inlined]
 [4] include_string(mapexpr::typeof(REPL.softscope), mod::Module, code::String, filename::String)
   @ Base .\loading.jl:1428
LoadError: PyError (PyImport_ImportModule

The Python package networkx could not be imported by pyimport. Usually this means
that you did not install networkx in the Python version being used by PyCall.

PyCall is currently configured to use the Python version at:

C:\Users\yamtak\AppData\Local\Programs\Python\Python310\python.exe

and you should use whatever mechanism you usually use (apt-get, pip, conda,
etcetera) to install the Python package containing the networkx module.

One alternative is to re-configure PyCall to use a different Python
version on your system: set ENV["PYTHON"] to the path/name of the python
executable you want to use, run Pkg.build("PyCall"), and re-launch Julia.

Another alternative is to configure PyCall to use a Julia-specific Python
distribution via the Conda.jl package (which installs a private Anaconda
Python distribution), which has the advantage that packages can be installed
and kept up-to-date via Julia.  As explained in the PyCall documentation,
set ENV["PYTHON"]="", run Pkg.build("PyCall"), and re-launch Julia. Then,
To install the networkx module, you can use `pyimport_conda("networkx", PKG)`,
where PKG is the Anaconda package that contains the module networkx,
or alternatively you can use the Conda package directly (via
`using Conda` followed by `Conda.add` etcetera).

) <class 'ModuleNotFoundError'>
ModuleNotFoundError("No module named 'networkx'")


